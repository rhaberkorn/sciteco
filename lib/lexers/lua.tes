! AUTO-GENERATED FROM SCITE PROPERTY SET !

@[lexer.test.lua]{
  _#!Mlua:M[lexer.checkheader]"S -1 '
  :EN*.luaQ*
}

@[lexer.set.lua]{
  ESSETILEXERlua
  0ESSETKEYWORDS
    and break do else elseif end for function if in local nil not or repeat
    return then until while false true goto
  1ESSETKEYWORDS
    assert collectgarbage dofile error _G getmetatable ipairs loadfile next
    pairs pcall print rawequal rawget rawset setmetatable tonumber tostring type
    _VERSION xpcall string table math coroutine io os debug getfenv gcinfo load loadlib
    loadstring require select setfenv unpack _LOADED LUA_PATH _REQUIREDNAME package rawlen
    package bit32 _ENV
  2ESSETKEYWORDS
    string.byte string.char string.dump string.find string.format string.gsub
    string.len string.lower string.rep string.sub string.upper table.concat table.insert
    table.remove table.sort math.abs math.acos math.asin math.atan math.atan2 math.ceil
    math.cos math.deg math.exp math.floor math.frexp math.ldexp math.log math.max
    math.min math.pi math.pow math.rad math.random math.randomseed math.sin math.sqrt
    math.tan string.gfind string.gmatch string.match string.reverse table.foreach
    table.foreachi table.getn table.setn table.maxn table.pack table.unpack math.cosh math.fmod
    math.huge math.log10 math.modf math.mod math.sinh math.tanh bit32.arshift bit32.band
    bit32.bnot bit32.bor bit32.btest bit32.bxor bit32.extract bit32.replace bit32.lrotate
    bit32.lshift bit32.rrotate bit32.rshift
  3ESSETKEYWORDS
    coroutine.create coroutine.resume coroutine.status coroutine.wrap
    coroutine.yield io.close io.flush io.input io.lines io.open io.output io.read io.tmpfile
    io.type io.write io.stdin io.stdout io.stderr os.clock os.date os.difftime
    os.execute os.exit os.getenv os.remove os.rename os.setlocale os.time os.tmpname
    coroutine.running io.popen module package.loaders package.seeall package.config
    package.searchers package.searchpath require package.cpath package.loaded package.loadlib
    package.path package.preload
  :M[color.comment],1M[color.set]
  :M[color.comment],2M[color.set]
  :M[color.number],4M[color.set]
  :M[color.keyword],5M[color.set]
  :M[color.string],6M[color.set]
  :M[color.string2],7M[color.set]
  :M[color.string],8M[color.set]
  :M[color.preproc],9M[color.set]
  :M[color.operator],10M[color.set]
}
