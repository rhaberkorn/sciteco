#!/usr/local/bin/sciteco -m
!*
 * ./symbols-extract.tes [-p <prefix pattern list>] -n <SymbolList object> [--] \
 *                       <output file> <input header>
 *!

0,2EJ !* FIXME: Memory limiting is too slow *!

:EMQ[$SCITECOPATH]/getopt.tes
EMQ[$SCITECOPATH]/string.tes

!* read commandline arguments *!
[getopt.p]
[optstring]p:n: M[getopt]"F (0/0) '
LR 0X#ou 2LR 0X#in HK

!* copy all defines in input file beginning with prefix *!
EBN#in <S#defineS[Q[getopt.p]]; -SS :Xa> EF

!* sort all defines *!
Ga ZJB 0,.M[qsort] J

!* format as C/C++ array *!
I/*
 * AUTOGENERATED FROM Q#in
 * DO NOT EDIT
 */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <glib.h>

#include "Q#in"
#include "sciteco.h"
#include "scintilla.h"

static const teco_symbol_entry_t entries[] = {^J
<
  .,W.Xa 0KK
  I#ifdef Qa^J^I{"Qa", Qa},^J#endif^J
.-Z;>
I};

static void __attribute__((constructor))
teco_symbols_init(void)
{
	teco_symbol_list_init(&Q[getopt.n], entries, G_N_ELEMENTS(entries), FALSE);
}

#ifndef NDEBUG
static void __attribute__((destructor))
teco_cmdline_cleanup(void)
{
	teco_symbol_list_clear(&Q[getopt.n]);
}
#endif^J

!* write output file *!
EWQ#ou

EX
